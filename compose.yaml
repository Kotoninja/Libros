services:
  server:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    networks:
      - webnet
    depends_on:
      db:
        condition: service_healthy
        restart: true

  db:
    image: postgres
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env
    networks:
      - webnet
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:alpine
    networks:
      - webnet
    ports:
      - "6379:6379"

networks:
  webnet:

volumes:
  db_data:
